!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction fetchData(data, method, route, success) {\r\n    fetch(route, {\r\n        method: method,\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n    })\r\n        .then((res) => {\r\n        success(res);\r\n    })\r\n        .catch((error) => {\r\n        console.log(error);\r\n    });\r\n}\r\nexports.default = fetchData;\r\n\n\n//# sourceURL=webpack:///./src/client/js/fetchData.ts?")},function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ticketClass_ts_1 = __importDefault(__webpack_require__(8));\r\nconst cardTicketsContent_ts_1 = __importDefault(__webpack_require__(9));\r\nconst fetchData_ts_1 = __importDefault(__webpack_require__(0));\r\nlet newTicketBtn = document.querySelector('.new-ticket');\r\nlet closeTicketBtn = document.getElementsByClassName('btn-close-ticket');\r\nlet page = document.querySelector('main');\r\nfunction showModals() {\r\n    newTicketBtn.addEventListener('click', showBgModal);\r\n    for (let i = 0; i < closeTicketBtn.length; i++) {\r\n        closeTicketBtn[i].addEventListener('click', showBgModal);\r\n    }\r\n}\r\nexports.default = showModals;\r\nfunction showBgModal(e) {\r\n    let bgModal;\r\n    if (e.currentTarget.classList.contains('new-ticket')) {\r\n        bgModal = document.querySelector('.bg-modal');\r\n        let form = bgModal.querySelector('.ticket-form');\r\n        let deadline = form.deadline;\r\n        deadline.onfocus = function (e) {\r\n            e.currentTarget.type = \"date\";\r\n        };\r\n        deadline.onblur = function (e) {\r\n            e.currentTarget.type = \"text\";\r\n        };\r\n        let submit = bgModal.querySelector('.submit-ticket');\r\n        submit.addEventListener('click', submitTicket);\r\n        function submitTicket() {\r\n            let inputs = form.querySelectorAll('input, select, textarea'); //get all inputs\r\n            let inputCount = 0;\r\n            for (let input of inputs) {\r\n                if (input.validationMessage !== '') {\r\n                    input.style.borderColor = 'red'; //outline empty fields or long title\r\n                    if (input.name === 'title') {\r\n                        let tooltipTxt = input.parentNode.getAttribute('data');\r\n                        input.parentNode.setAttribute('data-tooltip', tooltipTxt);\r\n                    }\r\n                }\r\n                else {\r\n                    inputCount++;\r\n                    input.style.borderColor = '#CFD8DC';\r\n                    input.parentNode.removeAttribute('data-tooltip');\r\n                    if (inputCount === inputs.length) {\r\n                        let ticketsArr = [];\r\n                        for (let input of inputs) {\r\n                            let val = input.value;\r\n                            if (input.name === 'description' || input.name === 'title') {\r\n                                val = val.slice(0, 1)\r\n                                    .toUpperCase() + val.slice(1, val.length);\r\n                            }\r\n                            ticketsArr.push(val);\r\n                        }\r\n                        fetchData_ts_1.default(new ticketClass_ts_1.default(...ticketsArr), 'POST', '/tickets', postTicketClose);\r\n                        form.reset();\r\n                        bgModal.style.display = \"none\";\r\n                        page.className = '';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (e.currentTarget.classList.contains('btn-close-ticket')) {\r\n        bgModal = document.querySelector('.close-ticket-modal');\r\n        let submit = bgModal.querySelector('.close-ticket');\r\n        let ticketId = e.currentTarget.id;\r\n        submit.addEventListener('click', closeTicket);\r\n        function closeTicket() {\r\n            let action = bgModal.querySelector('input[name=close]:checked').id;\r\n            fetchData_ts_1.default({ action, ticketId }, 'PATCH', '/tickets/close', postTicketClose);\r\n            bgModal.style.display = \"none\";\r\n            page.className = '';\r\n        }\r\n    }\r\n    bgModal.style.display = \"flex\";\r\n    page.className = 'blur';\r\n    centerModal(bgModal);\r\n    window.onresize = function () {\r\n        centerModal(bgModal);\r\n    };\r\n    let closeBtn = bgModal.querySelector('.close-bg-modal');\r\n    closeBtn.onclick = function () {\r\n        bgModal.style.display = \"none\";\r\n        page.className = '';\r\n    };\r\n    function centerModal(bgMod) {\r\n        if (bgMod) {\r\n            let contents = bgMod.querySelector('.modal-contents');\r\n            let width = contents.getBoundingClientRect().width;\r\n            let height = contents.getBoundingClientRect().height;\r\n            scrollTo({\r\n                top: contents.offsetTop - height / 5,\r\n                left: contents.offsetLeft - width / 5,\r\n                behavior: 'smooth'\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction postTicketClose(res) {\r\n    if (res.status === 200) {\r\n        Promise.resolve(res.text()).then((data) => {\r\n            let parser = new DOMParser();\r\n            let parsed = parser.parseFromString(data, 'text/html'); //TYPE???\r\n            cardTicketsContent_ts_1.default(parsed);\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/client/js/Modals.ts?")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet header = document.getElementsByClassName(\"d-block\");\r\nlet cardBody = document.querySelectorAll('.collapse, .show');\r\nlet takeBtn = document.querySelectorAll('.btn-take-ticket');\r\nfunction showHide(el) {\r\n    if (el.style.height !== '0px') {\r\n        el.style.height = '0px';\r\n    }\r\n    else {\r\n        el.style.display = 'block'; // Make it visible\r\n        el.style.height = el.scrollHeight + 'px';\r\n    }\r\n}\r\nfunction fixHeight(el) {\r\n    if (el.style.height !== '0px') {\r\n        el.style.height = el.scrollHeight + 'px';\r\n    }\r\n}\r\nfunction collapsables() {\r\n    for (let i = 0; i < header.length; i++) {\r\n        header[i].addEventListener(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.currentTarget.classList.toggle(\"active\");\r\n            let panel = e.currentTarget.nextElementSibling; //TYPE??\r\n            fixHeight(panel);\r\n            console.log(panel);\r\n            setTimeout(showHide, 0, panel); //showHide must execute after fixHeight\r\n        }); //otherwise height won't have a pixel value, and the transition wouldnt occur\r\n    }\r\n    window.addEventListener(\"resize\", function () {\r\n        for (let i = 0; i < cardBody.length; i++) {\r\n            if (cardBody[i].style.height !== '0px')\r\n                cardBody[i].style.height = 'auto';\r\n        }\r\n    });\r\n}\r\nexports.default = collapsables;\r\n\n\n//# sourceURL=webpack:///./src/client/js/collapsableCards.ts?")},function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Modals_ts_1 = __importDefault(__webpack_require__(1));\r\nconst fetchData_ts_1 = __importDefault(__webpack_require__(0));\r\nlet takeBtns = document.getElementsByClassName('btn-take-ticket');\r\nlet takeBtn;\r\nfunction ticketTake() {\r\n    for (let i = 0; i < takeBtns.length; i++) {\r\n        takeBtns[i].addEventListener('click', () => {\r\n            takeBtn = takeBtns[i];\r\n            fetchData_ts_1.default({}, 'PATCH', '/tickets/' + takeBtn.id, assigneePatch);\r\n        });\r\n    }\r\n    function assigneePatch(res) {\r\n        console.log('ENTERED');\r\n        if (res.status === 200) {\r\n            takeBtn.innerHTML = 'Close';\r\n            takeBtn.classList.toggle('btn-close-ticket');\r\n            takeBtn.classList.toggle('btn-take-ticket');\r\n            Modals_ts_1.default();\r\n        }\r\n    }\r\n}\r\nexports.default = ticketTake;\r\n\n\n//# sourceURL=webpack:///./src/client/js/ticketTake.ts?")},function(module,exports,__webpack_require__){"use strict";eval('\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { "default": mod };\r\n};\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nconst dropdowns_ts_1 = __importDefault(__webpack_require__(5));\r\nconst utilitiesHome_ts_1 = __importDefault(__webpack_require__(6));\r\nconst ticketStatus_ts_1 = __importDefault(__webpack_require__(7));\r\nconst collapsableCards_ts_1 = __importDefault(__webpack_require__(2));\r\nconst ticketTake_ts_1 = __importDefault(__webpack_require__(3));\r\nconst Modals_ts_1 = __importDefault(__webpack_require__(1));\r\ndropdowns_ts_1.default();\r\nutilitiesHome_ts_1.default();\r\nticketStatus_ts_1.default();\r\nModals_ts_1.default();\r\ncollapsableCards_ts_1.default();\r\nticketTake_ts_1.default();\r\n\n\n//# sourceURL=webpack:///./src/client/js/home.ts?')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet dropDowns = document.querySelectorAll('.nav-link');\r\nlet navbarSide = document.querySelector('.navbar-nav');\r\nlet pageTopBtn = document.querySelector('#sidebarToggleTop');\r\nlet pageTop = document.querySelector('#page-top');\r\nfor (let i = 0; i < dropDowns.length; i++) {\r\n    dropDowns[i].addEventListener('click', showToggle);\r\n}\r\nfunction showToggle(e) {\r\n    let el = e.currentTarget;\r\n    el.classList.toggle(\"show\");\r\n    if (el.nextElementSibling) {\r\n        el.nextElementSibling.classList.toggle(\"show\");\r\n    }\r\n    el[\"aria-expanded\"] = !el[\"aria-expanded\"];\r\n}\r\nfunction dropdowns() {\r\n    pageTopBtn.onclick = function () {\r\n        pageTop.classList.toggle('sidebar-toggled');\r\n        navbarSide.classList.toggle('toggled');\r\n    };\r\n}\r\nexports.default = dropdowns;\r\n\n\n//# sourceURL=webpack:///./src/client/js/dropdowns.ts?")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction utilities() {\r\n    let accountName = document.querySelector('.fullname');\r\n    let signOut = document.querySelector('.signout');\r\n    accountName.innerHTML = localStorage.un || ''; //decode from base64\r\n    signOut.onclick = function () {\r\n        localStorage.clear();\r\n        sessionStorage.clear();\r\n    };\r\n}\r\nexports.default = utilities;\r\n\n\n//# sourceURL=webpack:///./src/client/js/utilitiesHome.ts?")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet statusSection = document.querySelector('.ticket-status');\r\nfunction ticketStatus() {\r\n    statusSection.addEventListener('click', function (e) {\r\n        e.preventDefault();\r\n        location.search = '?status=' + e.target.classList.value;\r\n    });\r\n}\r\nexports.default = ticketStatus;\r\n\n\n//# sourceURL=webpack:///./src/client/js/ticketStatus.ts?")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nclass Ticket {\r\n    constructor(title, department, priority, deadline, description) {\r\n        this.title = title;\r\n        this.department = department;\r\n        this.priority = priority;\r\n        this.deadline = deadline;\r\n        this.description = description;\r\n    }\r\n}\r\nexports.default = Ticket;\r\n\n\n//# sourceURL=webpack:///./src/client/js/ticketClass.ts?')},function(module,exports,__webpack_require__){"use strict";eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst collapsableCards_ts_1 = __importDefault(__webpack_require__(2));\r\nconst ticketTake_ts_1 = __importDefault(__webpack_require__(3));\r\nconst Modals_ts_1 = __importDefault(__webpack_require__(1));\r\nfunction cardTicketsContent(tickets) {\r\n    if (!tickets) {\r\n        return;\r\n    }\r\n    document\r\n        .getElementsByClassName('tickets-display')[0]\r\n        .innerHTML = tickets\r\n        .getElementsByClassName('tickets-display')[0]\r\n        .innerHTML; //this chunk of dom is generated after the scripts are added\r\n    collapsableCards_ts_1.default();\r\n    ticketTake_ts_1.default();\r\n    Modals_ts_1.default();\r\n}\r\nexports.default = cardTicketsContent;\r\n\n\n//# sourceURL=webpack:///./src/client/js/cardTicketsContent.ts?")}]);